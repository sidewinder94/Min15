class Object

  fun print(o: Object) do
    o.toString().toSystemOut()
  end
end

class Boolean
end

class String
  intern fun +(o: String): String

  fun toString(): String do
    return self
  end

  fun concat(o: String) : String do
    return self + o
  end

  intern fun toSystemOut()
end


class Integer
  intern fun toString(): String
  intern fun <(i: Integer): Boolean
  intern fun >(i: Integer): Boolean
  intern fun +(i: Integer): Integer
  intern fun -(i: Integer): Integer
  intern fun *(i: Integer): Integer


  fun factor() : Integer do
    if self > 1 then
        return self * (self - 1).factor()
    else
        return 1 #Plante sur le 1 car le type de retour n'est pas celui attendu
    end
  end
end

# ecrire: Hello World
print("Hello ".concat("1")) #Plante, la vérification de types détecte que 1 n'est pas une chaine de caractères


# ecrire: 1
var i = 1

#Test de l'efficacité des scopes. i est le meme à l'intérieur et a l'extérieur du while, a n'est accessible que dans le while
#De plus, la définition de a dans la boucle ne soulève pas d'erreur !
while i < 5 do
    var a = i
    print(a)
    i = i + 1
end

print(i)

print(i.factor())

print(1) #error expected, var not declared in this scope
