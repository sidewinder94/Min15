/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class AClassDef extends PClassDef
{
    private final LinkedList<TEol> _eols1_ = new LinkedList<TEol>();
    private TClass _classKeyword_;
    private TClassName _className_;
    private PSuperDecl _superDecl_;
    private TEol _eol1_;
    private final LinkedList<PMember> _members_ = new LinkedList<PMember>();
    private final LinkedList<TEol> _eols2_ = new LinkedList<TEol>();
    private TEnd _end_;
    private TEol _eol2_;

    public AClassDef()
    {
        // Constructor
    }

    public AClassDef(
        @SuppressWarnings("hiding") List<?> _eols1_,
        @SuppressWarnings("hiding") TClass _classKeyword_,
        @SuppressWarnings("hiding") TClassName _className_,
        @SuppressWarnings("hiding") PSuperDecl _superDecl_,
        @SuppressWarnings("hiding") TEol _eol1_,
        @SuppressWarnings("hiding") List<?> _members_,
        @SuppressWarnings("hiding") List<?> _eols2_,
        @SuppressWarnings("hiding") TEnd _end_,
        @SuppressWarnings("hiding") TEol _eol2_)
    {
        // Constructor
        setEols1(_eols1_);

        setClassKeyword(_classKeyword_);

        setClassName(_className_);

        setSuperDecl(_superDecl_);

        setEol1(_eol1_);

        setMembers(_members_);

        setEols2(_eols2_);

        setEnd(_end_);

        setEol2(_eol2_);

    }

    @Override
    public Object clone()
    {
        return new AClassDef(
            cloneList(this._eols1_),
            cloneNode(this._classKeyword_),
            cloneNode(this._className_),
            cloneNode(this._superDecl_),
            cloneNode(this._eol1_),
            cloneList(this._members_),
            cloneList(this._eols2_),
            cloneNode(this._end_),
            cloneNode(this._eol2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClassDef(this);
    }

    public LinkedList<TEol> getEols1()
    {
        return this._eols1_;
    }

    public void setEols1(List<?> list)
    {
        for(TEol e : this._eols1_)
        {
            e.parent(null);
        }
        this._eols1_.clear();

        for(Object obj_e : list)
        {
            TEol e = (TEol) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._eols1_.add(e);
        }
    }

    public TClass getClassKeyword()
    {
        return this._classKeyword_;
    }

    public void setClassKeyword(TClass node)
    {
        if(this._classKeyword_ != null)
        {
            this._classKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classKeyword_ = node;
    }

    public TClassName getClassName()
    {
        return this._className_;
    }

    public void setClassName(TClassName node)
    {
        if(this._className_ != null)
        {
            this._className_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._className_ = node;
    }

    public PSuperDecl getSuperDecl()
    {
        return this._superDecl_;
    }

    public void setSuperDecl(PSuperDecl node)
    {
        if(this._superDecl_ != null)
        {
            this._superDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._superDecl_ = node;
    }

    public TEol getEol1()
    {
        return this._eol1_;
    }

    public void setEol1(TEol node)
    {
        if(this._eol1_ != null)
        {
            this._eol1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eol1_ = node;
    }

    public LinkedList<PMember> getMembers()
    {
        return this._members_;
    }

    public void setMembers(List<?> list)
    {
        for(PMember e : this._members_)
        {
            e.parent(null);
        }
        this._members_.clear();

        for(Object obj_e : list)
        {
            PMember e = (PMember) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._members_.add(e);
        }
    }

    public LinkedList<TEol> getEols2()
    {
        return this._eols2_;
    }

    public void setEols2(List<?> list)
    {
        for(TEol e : this._eols2_)
        {
            e.parent(null);
        }
        this._eols2_.clear();

        for(Object obj_e : list)
        {
            TEol e = (TEol) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._eols2_.add(e);
        }
    }

    public TEnd getEnd()
    {
        return this._end_;
    }

    public void setEnd(TEnd node)
    {
        if(this._end_ != null)
        {
            this._end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._end_ = node;
    }

    public TEol getEol2()
    {
        return this._eol2_;
    }

    public void setEol2(TEol node)
    {
        if(this._eol2_ != null)
        {
            this._eol2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eol2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._eols1_)
            + toString(this._classKeyword_)
            + toString(this._className_)
            + toString(this._superDecl_)
            + toString(this._eol1_)
            + toString(this._members_)
            + toString(this._eols2_)
            + toString(this._end_)
            + toString(this._eol2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._eols1_.remove(child))
        {
            return;
        }

        if(this._classKeyword_ == child)
        {
            this._classKeyword_ = null;
            return;
        }

        if(this._className_ == child)
        {
            this._className_ = null;
            return;
        }

        if(this._superDecl_ == child)
        {
            this._superDecl_ = null;
            return;
        }

        if(this._eol1_ == child)
        {
            this._eol1_ = null;
            return;
        }

        if(this._members_.remove(child))
        {
            return;
        }

        if(this._eols2_.remove(child))
        {
            return;
        }

        if(this._end_ == child)
        {
            this._end_ = null;
            return;
        }

        if(this._eol2_ == child)
        {
            this._eol2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<TEol> i = this._eols1_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((TEol) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._classKeyword_ == oldChild)
        {
            setClassKeyword((TClass) newChild);
            return;
        }

        if(this._className_ == oldChild)
        {
            setClassName((TClassName) newChild);
            return;
        }

        if(this._superDecl_ == oldChild)
        {
            setSuperDecl((PSuperDecl) newChild);
            return;
        }

        if(this._eol1_ == oldChild)
        {
            setEol1((TEol) newChild);
            return;
        }

        for(ListIterator<PMember> i = this._members_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PMember) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<TEol> i = this._eols2_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((TEol) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

        if(this._eol2_ == oldChild)
        {
            setEol2((TEol) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
