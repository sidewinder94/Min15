/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AVarInitStmt extends PStmt
{
    private TVar _var_;
    private TId _id_;
    private TEq _eq_;
    private TEol _eol1_;
    private PExp _exp_;
    private TEol _eol2_;

    public AVarInitStmt()
    {
        // Constructor
    }

    public AVarInitStmt(
        @SuppressWarnings("hiding") TVar _var_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TEq _eq_,
        @SuppressWarnings("hiding") TEol _eol1_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TEol _eol2_)
    {
        // Constructor
        setVar(_var_);

        setId(_id_);

        setEq(_eq_);

        setEol1(_eol1_);

        setExp(_exp_);

        setEol2(_eol2_);

    }

    @Override
    public Object clone()
    {
        return new AVarInitStmt(
            cloneNode(this._var_),
            cloneNode(this._id_),
            cloneNode(this._eq_),
            cloneNode(this._eol1_),
            cloneNode(this._exp_),
            cloneNode(this._eol2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarInitStmt(this);
    }

    public TVar getVar()
    {
        return this._var_;
    }

    public void setVar(TVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TEq getEq()
    {
        return this._eq_;
    }

    public void setEq(TEq node)
    {
        if(this._eq_ != null)
        {
            this._eq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eq_ = node;
    }

    public TEol getEol1()
    {
        return this._eol1_;
    }

    public void setEol1(TEol node)
    {
        if(this._eol1_ != null)
        {
            this._eol1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eol1_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TEol getEol2()
    {
        return this._eol2_;
    }

    public void setEol2(TEol node)
    {
        if(this._eol2_ != null)
        {
            this._eol2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eol2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._var_)
            + toString(this._id_)
            + toString(this._eq_)
            + toString(this._eol1_)
            + toString(this._exp_)
            + toString(this._eol2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._eq_ == child)
        {
            this._eq_ = null;
            return;
        }

        if(this._eol1_ == child)
        {
            this._eol1_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._eol2_ == child)
        {
            this._eol2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._var_ == oldChild)
        {
            setVar((TVar) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._eq_ == oldChild)
        {
            setEq((TEq) newChild);
            return;
        }

        if(this._eol1_ == oldChild)
        {
            setEol1((TEol) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._eol2_ == oldChild)
        {
            setEol2((TEol) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
